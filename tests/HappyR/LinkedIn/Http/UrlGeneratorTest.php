<?php


namespace HappyR\LinkedIn\Http;


/**
 * Class UrlGeneratorTest
 *
 * @author Tobias Nyholm
 *
 */
class UrlGeneratorTest extends \PHPUnit_Framework_TestCase
{


    public function testHttpHost() {
        $real = 'foo.com';
        $_SERVER['HTTP_HOST'] = $real;
        $_SERVER['HTTP_X_FORWARDED_HOST'] = 'evil.com';
        $gen = new DummyUrlGenerator();
        $this->assertEquals($real, $gen->GetHttpHost());
    }

    public function testHttpProtocol() {
        $_SERVER['HTTPS'] = 'on';
        $_SERVER['HTTP_X_FORWARDED_PROTO'] = 'http';
        $gen = new DummyUrlGenerator();
        $this->assertEquals('https', $gen->GetHttpProtocol());
    }

    public function testHttpHostForwarded() {
        $real = 'foo.com';
        $_SERVER['HTTP_HOST'] = 'localhost';
        $_SERVER['HTTP_X_FORWARDED_HOST'] = $real;
        $gen = new DummyUrlGenerator();
        $gen->setTrustForwarded(true);
        $this->assertEquals($real, $gen->GetHttpHost());
    }

    public function testHttpProtocolForwarded() {
        $_SERVER['HTTPS'] = 'on';
        $_SERVER['HTTP_X_FORWARDED_PROTO'] = 'http';
        $gen = new DummyUrlGenerator();
        $gen->setTrustForwarded(true);
        $this->assertEquals('http', $gen->GetHttpProtocol());
    }

    public function testHttpProtocolForwardedSecure() {
        $_SERVER['HTTPS'] = 'on';
        $_SERVER['HTTP_X_FORWARDED_PROTO'] = 'https';
        $gen = new DummyUrlGenerator();
        $this->assertEquals('https', $gen->GetHttpProtocol());
    }

    


}

class DummyUrlGenerator extends UrlGenerator
{
    public function getHttpHost()
    {
        return parent::getHttpHost(); // TODO: Change the autogenerated stub
    }

    public function getHttpProtocol()
    {
        return parent::getHttpProtocol(); // TODO: Change the autogenerated stub
    }
}